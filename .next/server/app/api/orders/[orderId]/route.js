"use strict";(()=>{var e={};e.id=382,e.ids=[382],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},41725:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>f,originalPathname:()=>D,patchFetch:()=>I,requestAsyncStorage:()=>S,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>w});var o={};r.r(o),r.d(o,{GET:()=>u,dynamic:()=>m});var a=r(95419),n=r(69108),d=r(99678),s=r(57838),i=r(31228),c=r(4385),l=r(18237),p=r(78070);let u=async(e,{params:t})=>{try{await (0,l.P)();let e=await i.Z.findById(t.orderId).populate({path:"products.product",model:c.Z});if(!e)return new p.Z(JSON.stringify({message:"Order Not Found"}),{status:404});let r=await s.Z.findOne({clerkId:e.customerClerkId});return p.Z.json({orderDetails:e,customer:r},{status:200})}catch(e){return console.log("[orderId_GET]",e),new p.Z("Internal Server Error",{status:500})}},m="force-dynamic",g=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/orders/[orderId]/route",pathname:"/api/orders/[orderId]",filename:"route",bundlePath:"app/api/orders/[orderId]/route"},resolvedPagePath:"C:\\Users\\ASharma\\Documents\\New folder\\borcella_admin-master\\app\\api\\orders\\[orderId]\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:S,staticGenerationAsyncStorage:y,serverHooks:h,headerHooks:f,staticGenerationBailout:w}=g,D="/api/orders/[orderId]/route";function I(){return(0,d.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:y})}},57838:(e,t,r)=>{r.d(t,{Z:()=>d});var o=r(11185),a=r.n(o);let n=new(a()).Schema({clerkId:String,name:String,email:String,orders:{type:[{type:a().Schema.Types.ObjectId,ref:"Order"}]},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}}),d=a().models.Customer||a().model("Customer",n)},31228:(e,t,r)=>{r.d(t,{Z:()=>d});var o=r(11185),a=r.n(o);let n=new(a()).Schema({customerClerkId:String,products:[{product:{type:a().Schema.Types.ObjectId,ref:"Product"},color:String,size:String,quantity:Number}],shippingAddress:{street:String,city:String,state:String,postalCode:String,country:String},shippingRate:String,totalAmount:Number,createdAt:{type:Date,default:Date.now}}),d=a().models.Order||a().model("Order",n)},4385:(e,t,r)=>{r.d(t,{Z:()=>d});var o=r(11185),a=r.n(o);let n=new(a()).Schema({title:String,description:String,media:[String],category:String,collections:[{type:a().Schema.Types.ObjectId,ref:"Collection"}],tags:[String],sizes:[String],colors:[String],price:{type:a().Schema.Types.Decimal128,get:e=>parseFloat(e.toString())},expense:{type:a().Schema.Types.Decimal128,get:e=>parseFloat(e.toString())},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}},{toJSON:{getters:!0}}),d=a().models.Product||a().model("Product",n)},18237:(e,t,r)=>{r.d(t,{P:()=>d});var o=r(11185),a=r.n(o);let n=!1,d=async()=>{if(a().set("strictQuery",!0),n){console.log("MongoDB is already connected");return}try{await a().connect(process.env.MONGODB_URL||"",{dbName:"Borcelle_Admin"}),n=!0,console.log("MongoDB is connected")}catch(e){console.log(e)}}},95419:(e,t,r)=>{e.exports=r(30517)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,70],()=>r(41725));module.exports=o})();